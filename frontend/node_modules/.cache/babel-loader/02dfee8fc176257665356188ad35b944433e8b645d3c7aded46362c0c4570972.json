{"ast":null,"code":"var _jsxFileName = \"/Users/travis/Projects/SoftwareTravis/frontend/src/Context/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/Styles/ThemeContext.tsx\nimport React, { createContext, useMemo, useState, useContext } from 'react';\nimport { ThemeProvider, CssBaseline } from '@mui/material';\nimport { getDesignTokens } from '../Styles/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nexport const useColorMode = () => {\n  _s();\n  return useContext(ColorModeContext);\n};\n_s(useColorMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CustomThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState('light');\n  const toggleColorMode = () => {\n    setMode(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  const theme = useMemo(() => getDesignTokens(mode), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: {\n      toggleColorMode\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s2(CustomThemeProvider, \"u8zjN1kWJUDh6oH/uPWW9KokeTA=\");\n_c = CustomThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"CustomThemeProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useState","useContext","ThemeProvider","CssBaseline","getDesignTokens","jsxDEV","_jsxDEV","ColorModeContext","toggleColorMode","useColorMode","_s","CustomThemeProvider","children","_s2","mode","setMode","prev","theme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/travis/Projects/SoftwareTravis/frontend/src/Context/ThemeContext.tsx"],"sourcesContent":["// src/Styles/ThemeContext.tsx\nimport React, { createContext, useMemo, useState, useContext } from 'react';\nimport { ThemeProvider, CssBaseline } from '@mui/material';\nimport { getDesignTokens } from '../Styles/theme';\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nexport const useColorMode = () => useContext(ColorModeContext);\n\nexport const CustomThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\n\n  const toggleColorMode = () => {\n    setMode((prev) => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  const theme = useMemo(() => getDesignTokens(mode), [mode]);\n\n  return (\n    <ColorModeContext.Provider value={{ toggleColorMode }}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC3E,SAASC,aAAa,EAAEC,WAAW,QAAQ,eAAe;AAC1D,SAASC,eAAe,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,gBAAgB,gBAAGT,aAAa,CAAC;EAAEU,eAAe,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAErE,OAAO,MAAMC,YAAY,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACM,gBAAgB,CAAC;AAAA;AAACG,EAAA,CAAlDD,YAAY;AAEzB,OAAO,MAAME,mBAA4D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAmB,OAAO,CAAC;EAE3D,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BO,OAAO,CAAEC,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAC1D,CAAC;EAED,MAAMC,KAAK,GAAGlB,OAAO,CAAC,MAAMK,eAAe,CAACU,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAE1D,oBACER,OAAA,CAACC,gBAAgB,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEX;IAAgB,CAAE;IAAAI,QAAA,eACpDN,OAAA,CAACJ,aAAa;MAACe,KAAK,EAAEA,KAAM;MAAAL,QAAA,gBAC1BN,OAAA,CAACH,WAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdX,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEhC,CAAC;AAACV,GAAA,CAjBWF,mBAA4D;AAAAa,EAAA,GAA5Db,mBAA4D;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}